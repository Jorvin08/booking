/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package transactions;

import Config.Session;
import Users.User;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author II
 */
public class reservehotel extends javax.swing.JFrame {

    /**
     * Creates new form reservehotel
     */
    public reservehotel() {
        initComponents();
        loadHotelsToTable() ;
    }
private void loadHotelsToTable() {
   
    String[] columnNames = {"Hotel ID", "Name", "Address", "City", "State", "Zip", "Country", "Phone", "Email", "Rating", "Description"};
    
    DefaultTableModel model = new DefaultTableModel();
    model.setColumnIdentifiers(columnNames);

    String url = "jdbc:mysql://localhost:3306/booking";
    String username = "root";
    String password = "";     

    String sql = "SELECT * FROM hotels";

    try (Connection conn = DriverManager.getConnection(url, username, password);
         PreparedStatement pst = conn.prepareStatement(sql);
         ResultSet rs = pst.executeQuery()) {

        while (rs.next()) {
            int id = rs.getInt("hotel_id");
            String name = rs.getString("hotel_name");
            String address = rs.getString("address");
            String city = rs.getString("city");
            String state = rs.getString("state");
            String zip = rs.getString("zip_code");
            String country = rs.getString("country");
            String phone = rs.getString("phone_number");
            String email = rs.getString("email");
            double rating = rs.getDouble("star_rating");
            String description = rs.getString("description");

            model.addRow(new Object[]{id, name, address, city, state, zip, country, phone, email, rating, description});
        }

        jTable1.setModel(model);

    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error loading hotels: " + ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        Reserve = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(204, 0, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(102, 255, 255));
        jPanel2.setForeground(new java.awt.Color(204, 0, 0));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 0));
        jLabel1.setText("Reserve a hotel");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, -1, -1));

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 890, 60));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 830, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 840, 380));

        Reserve.setText("Reserve");
        Reserve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReserveActionPerformed(evt);
            }
        });
        jPanel1.add(Reserve, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 450, 120, 41));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        User aa = new User();
        aa.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void ReserveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReserveActionPerformed
    int selectedRow = jTable1.getSelectedRow();

    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Please select a hotel to reserve.", "No Selection", JOptionPane.WARNING_MESSAGE);
        return;
    }

    int hotelId = (int) jTable1.getValueAt(selectedRow, 0); // hotel_id

    String checkIn = JOptionPane.showInputDialog(this, "Enter Check-In Date (YYYY-MM-DD):");
    String checkOut = JOptionPane.showInputDialog(this, "Enter Check-Out Date (YYYY-MM-DD):");
    String guestStr = JOptionPane.showInputDialog(this, "Enter Number of Guests:");

    if (checkIn == null || checkOut == null || guestStr == null || checkIn.isEmpty() || checkOut.isEmpty() || guestStr.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please provide all reservation details.", "Input Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    int numGuests;
    try {
        numGuests = Integer.parseInt(guestStr);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Invalid number of guests.", "Input Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    String roomType = "Default";
    String specialRequests = "None";

    String url = "jdbc:mysql://localhost:3306/booking";
    String username = "root";
    String password = "";

    try (Connection conn = DriverManager.getConnection(url, username, password)) {

      
        String checkSql = "SELECT COUNT(*) FROM booked_hotels WHERE hotel_id = ? AND booking_status IN ('pending', 'approved') "
                        + "UNION ALL "
                        + "SELECT COUNT(*) FROM reserved_hotels WHERE hotel_id = ? AND reservation_status IN ('pending', 'approved')";

        try (PreparedStatement checkPst = conn.prepareStatement(checkSql)) {
            checkPst.setInt(1, hotelId);
            checkPst.setInt(2, hotelId);

            ResultSet rs = checkPst.executeQuery();
            int totalConflicts = 0;
            while (rs.next()) {
                totalConflicts += rs.getInt(1);
            }

            if (totalConflicts > 0) {
                JOptionPane.showMessageDialog(this, "This hotel is already booked or reserved.", "Reservation Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

       
        String insertSql = "INSERT INTO reserved_hotels (hotel_id, user_id, check_in_date, check_out_date, num_guests, room_type, special_requests, reservation_status) "
                         + "VALUES (?, ?, ?, ?, ?, ?, ?, 'pending')";

        try (PreparedStatement pst = conn.prepareStatement(insertSql)) {
            pst.setInt(1, hotelId);
            pst.setInt(2, Session.getInstance().getId());
            pst.setString(3, checkIn);
            pst.setString(4, checkOut);
            pst.setInt(5, numGuests);
            pst.setString(6, roomType);
            pst.setString(7, specialRequests);

            int result = pst.executeUpdate();
            if (result > 0) {
                JOptionPane.showMessageDialog(this, "Hotel reservation submitted successfully. Waiting for admin approval.");
            } else {
                JOptionPane.showMessageDialog(this, "Reservation failed.", "Insert Error", JOptionPane.ERROR_MESSAGE);
            }
        }

    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Database Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_ReserveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(reservehotel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(reservehotel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(reservehotel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(reservehotel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new reservehotel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Reserve;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
